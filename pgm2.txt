#include<GL/glut.h>
#include<stdio.h>
int xc, yc, r;
int rx, ry, xce, yce;
void draw_circle(int xc, int yc, int x, int y)
{
    glBegin(GL_POINTS);
    glVertex2i(xc + x, yc + y);
    glVertex2i(xc - x, yc + y);
    glVertex2i(xc + x, yc - y);
    glVertex2i(xc - x, yc - y);

    glVertex2i(xc + y, yc + x);
    glVertex2i(xc - y, yc + x);
    glVertex2i(xc + y, yc - x);
    glVertex2i(xc - y, yc - x);
    glEnd();
}

void circlebres()
{
    glClear(GL_COLOR_BUFFER_BIT);
    int x = 0, y = r;
    int d = 3 - 2 * r;
    while (x <= y)
    {
        draw_circle(xc, yc, x, y);
        x++;
        if (d < 0)
            d = d + 4 * x + 6;

        else
        {
            y--;
            d = d + 4 * (x - y) + 10;
        }
        draw_circle(xc, yc, x, y);
    }
    glFlush();
}
void draw_ellipse(int xce, int yce, int x, int y)
{
	glBegin(GL_POINTS);
	glVertex2i(x + xce, y + yce);
	glVertex2i(-x + xce, y + yce);
	glVertex2i(x + xce, -y + yce);
	glVertex2i(-x + xce, -y + yce);
	glEnd();
}
void ellipsebres()
{
	glClear(GL_COLOR_BUFFER_BIT);
	float dx, dy, d1, d2, x, y;
	x = 0;
	y = ry;											
	d1 = (ry * ry) - (rx * rx * ry) +
		(0.25 * rx * rx);
	dx = 2 * ry * ry * x;
	dy = 2 * rx * rx * y;

	while (dx < dy)
	{
		draw_ellipse(xce, yce, x, y);
		if (d1 < 0)
		{
			x++;
			dx = dx + (2 * ry * ry);
			d1 = d1 + dx + (ry * ry);
		}
		else
		{
			x++;
			y--;
			dx = dx + (2 * ry * ry);
			dy = dy - (2 * rx * rx);
			d1 = d1 + dx - dy + (ry * ry);
		}
	} 
	d2 = ((ry * ry) * ((x + 0.5) * (x + 0.5))) + ((rx * rx) * ((y - 1) * (y - 1))) - (rx * rx * ry * ry);
	while (y >= 0)
	{ 
		draw_ellipse(xce, yce, x, y);
		if (d2 > 0)
		{
			y--;
			dy = dy - (2 * rx * rx);
			d2 = d2 + (rx * rx) - dy;
		}
		else
		{
			y--;
			x++;
			dx = dx + (2 * ry * ry);
			dy = dy - (2 * rx * rx);
			d2 = d2 + dx - dy + (rx * rx);
		}
	}
	glFlush();
}

void minit()
{
	glClearColor(1, 1, 1, 1);									
	glColor3f(1.0, 0.0, 0.0);									
    glPointSize(3.0);											
	gluOrtho2D(-250, 250, -250, 250);
}


void main(int argc, char* argv[])
{
	glutInit(&argc, argv);										
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);				
	glutInitWindowSize(500, 500);								
	glutInitWindowPosition(0, 0);
	printf("Enter 1 to draw circle , 2 to draw ellipse\n");
	int ch;
	scanf_s("%d", &ch);
	switch (ch) {
	case 1:
		printf("Enter coordinates of centre of circle and radius\n");
		scanf_s("%d%d%d", &xc, &yc, &r);
		glutCreateWindow("Circle");														
		glutDisplayFunc(circlebres);													 
		break;
	case 2:
		printf("Enter coordinates of centre of ellipse and major and minor radius\n");
		scanf_s("%d%d%d%d", &xce, &yce, &rx, &ry);
		glutCreateWindow("Ellipse");													
		glutDisplayFunc(ellipsebres);													
		break;
	}
	 
	minit();																			
	glutMainLoop();
}